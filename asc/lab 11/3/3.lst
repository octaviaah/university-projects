     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13 00000000 6135335E3231617073-         s1 db "a53^21aps", 0
    13 00000009 00                 
    14                                      len1 equ ($-s1)
    15 0000000A 32316E632A35616C32-         s2 db "21nc*5al2", 0
    15 00000013 00                 
    16                                      len2 equ ($-s2)
    17 00000014 00<rept>                    sf times len1+len2 db 0
    18                                  
    19                                  ; our code starts here
    20                                  segment code use32 class=code
    21                                      start:
    22                                          ;Two strings containing characters are given. Calculate and display the result of the concatenation of all characters of type decimal number from the second string, and then followed by those from the first 
    23 00000000 BE00000000                      mov esi, 0
    24 00000005 BF00000000                      mov edi, 0
    25                                          add_dec_2:
    26 0000000A 8A86[0A000000]                      mov al, [s2+esi]
    27 00000010 3C30                                cmp al, '0'
    28 00000012 720B                                jb redo1
    29 00000014 3C39                                cmp al, '9'
    30 00000016 7707                                ja redo1
    31 00000018 8887[14000000]                      mov [sf+edi], al
    32 0000001E 47                                  inc edi
    33                                              redo1:
    34 0000001F 46                                      inc esi
    35 00000020 83FE09                                  cmp esi, len2-1
    36 00000023 7402                                    jz cont1
    37 00000025 EBE3                                jmp add_dec_2
    38                                          cont1:
    39 00000027 BE00000000                      mov esi, 0
    40                                          add_dec_1:
    41 0000002C 8A86[00000000]                      mov al, [s1+esi]
    42 00000032 3C30                                cmp al, '0'
    43 00000034 720B                                jb redo2
    44 00000036 3C39                                cmp al, '9'
    45 00000038 7707                                ja redo2
    46 0000003A 8887[14000000]                      mov [sf+edi], al
    47 00000040 47                                  inc edi
    48                                              redo2:
    49 00000041 46                                      inc esi
    50 00000042 83FE09                                  cmp esi, len1-1
    51 00000045 7402                                    jz cont2
    52 00000047 EBE3                                jmp add_dec_1
    53                                          cont2:
    54 00000049 BE00000000                      mov esi, 0
    55                                          add_ch_1:
    56 0000004E 8A86[00000000]                      mov al, [s1+esi]
    57 00000054 3C30                                cmp al, '0'   
    58 00000056 742B                                je redo3
    59 00000058 3C31                                cmp al, '1'   
    60 0000005A 7427                                je redo3
    61 0000005C 3C32                                cmp al, '2'   
    62 0000005E 7423                                je redo3
    63 00000060 3C33                                cmp al, '3'   
    64 00000062 741F                                je redo3
    65 00000064 3C34                                cmp al, '4'   
    66 00000066 741B                                je redo3
    67 00000068 3C35                                cmp al, '5'   
    68 0000006A 7417                                je redo3
    69 0000006C 3C36                                cmp al, '6'   
    70 0000006E 7413                                je redo3
    71 00000070 3C37                                cmp al, '7'   
    72 00000072 740F                                je redo3
    73 00000074 3C38                                cmp al, '8'   
    74 00000076 740B                                je redo3
    75 00000078 3C39                                cmp al, '9'   
    76 0000007A 7407                                je redo3
    77 0000007C 8887[14000000]                      mov [sf+edi], al
    78 00000082 47                                  inc edi
    79                                              redo3:
    80 00000083 46                                      inc esi
    81 00000084 83FE09                                  cmp esi, len1-1
    82 00000087 7402                                    jz cont3
    83 00000089 EBC3                                jmp add_ch_1
    84                                          cont3:
    85 0000008B BE00000000                      mov esi, 0
    86                                          add_ch_2:
    87 00000090 8A86[0A000000]                      mov al, [s2+esi]
    88 00000096 3C30                                cmp al, '0'   
    89 00000098 742B                                je redo4
    90 0000009A 3C31                                cmp al, '1'   
    91 0000009C 7427                                je redo4
    92 0000009E 3C32                                cmp al, '2'   
    93 000000A0 7423                                je redo4
    94 000000A2 3C33                                cmp al, '3'   
    95 000000A4 741F                                je redo4
    96 000000A6 3C34                                cmp al, '4'   
    97 000000A8 741B                                je redo4
    98 000000AA 3C35                                cmp al, '5'   
    99 000000AC 7417                                je redo4
   100 000000AE 3C36                                cmp al, '6'   
   101 000000B0 7413                                je redo4
   102 000000B2 3C37                                cmp al, '7'   
   103 000000B4 740F                                je redo4
   104 000000B6 3C38                                cmp al, '8'   
   105 000000B8 740B                                je redo4
   106 000000BA 3C39                                cmp al, '9'   
   107 000000BC 7407                                je redo4
   108 000000BE 8887[14000000]                      mov [sf+edi], al
   109 000000C4 47                                  inc edi
   110                                              redo4:
   111 000000C5 46                                      inc esi
   112 000000C6 83FE09                                  cmp esi, len2-1
   113 000000C9 7402                                    jz fin
   114 000000CB EBC3                                jmp add_ch_2
   115                                          fin:
   116                                          ; exit(0)
   117 000000CD 6A00                            push    dword 0      ; push the parameter for exit onto the stack
   118 000000CF FF15[00000000]                  call    [exit]       ; call exit to terminate the program
