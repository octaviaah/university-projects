     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, printf, rotate              ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                  import printf msvcrt.dll
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13 00000000 A28D0000                    a dd 36258
    14 00000004 257800                      xformat db "%x", 0
    15                                  ; our code starts here
    16                                  segment code use32 class=code
    17                                      start:
    18                                      ;An unsigned number a on 32 bits is given. Print the hexadecimal representation of a, but also the results of the circular permutations of its hex digits.
    19 00000000 A1[00000000]                    mov eax, [a]
    20 00000005 50                              push eax
    21 00000006 68[04000000]                    push dword xformat
    22 0000000B FF15[00000000]                  call [printf]
    23 00000011 83C408                          add esp, 4*2
    24                                          
    25 00000014 A1[00000000]                    mov eax, [a]
    26                                          
    27 00000019 50                              push eax
    28 0000001A E8(00000000)                    call rotate
    29                                          ; exit(0)
    30 0000001F 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    31 00000021 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
