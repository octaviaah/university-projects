     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, scanf, printf               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                  import scanf msvcrt.dll
    10                                  import printf msvcrt.dll
    11                                  
    12                                  ; our data is declared here (the variables needed by our program)
    13                                  segment data use32 class=data
    14 00000000 <res 00000001>              digit resb 1
    15 00000001 256300                      cformat db "%c", 0
    16 00000004 <res 0000000A>              frq resb 10
    17 0000000E 256400                      dformat db "%d", 0
    18 00000011 00000000                    index dd 0
    19 00000015 00000000                    no dd 0
    20                                  
    21                                  ; our code starts here
    22                                  segment code use32 class=code
    23                                      start:
    24                                          ;Se citesc cifre de la tastatura pana la introducerea lui !
    25                                          ;(atentie sa se citeasca cu %c!!)
    26                                          ;sa se formeze cel mai mare numar din cifrele pare citite
    27                                          read_digits:
    28 00000000 68[00000000]                        push dword digit
    29 00000005 68[01000000]                        push dword cformat
    30 0000000A FF15[00000000]                      call [scanf]
    31 00000010 83C408                              add esp, 8
    32                                              
    33 00000013 31C0                                xor eax, eax
    34 00000015 A0[00000000]                        mov al, [digit]
    35 0000001A 3C21                                cmp al, '!'
    36 0000001C 740D                                je fin
    37                                              
    38 0000001E 2C30                                sub al, 30h
    39 00000020 89C7                                mov edi, eax
    40 00000022 8087[04000000]01                    add byte [frq+edi], 1
    41                                              
    42 00000029 EBD5                                jmp read_digits
    43                                              
    44                                          fin:
    45 0000002B BE08000000                          mov esi, 8
    46                                              print_nmb:
    47 00000030 8935[11000000]                          mov [index], esi
    48 00000036 31C0                                    xor eax, eax
    49 00000038 8A86[04000000]                          mov al, [frq+esi]
    50 0000003E 3C00                                    cmp al, 0
    51 00000040 7502                                    jne printing
    52 00000042 7424                                    je cont
    53                                                  printing:
    54 00000044 A3[15000000]                                mov [no], eax
    55 00000049 FF35[11000000]                              push dword [index]
    56 0000004F 68[0E000000]                                push dword dformat
    57 00000054 FF15[00000000]                              call [printf]
    58 0000005A 83C408                                      add esp, 8
    59                                                      
    60 0000005D A1[15000000]                                mov eax, [no]
    61 00000062 2C01                                        sub al, 1
    62 00000064 3C00                                        cmp al, 0
    63 00000066 75DC                                        jne printing
    64                                                  cont:
    65 00000068 8B35[11000000]                              mov esi, [index]
    66 0000006E 83EE02                                      sub esi, 2
    67 00000071 83FEFE                                      cmp esi, -2
    68 00000074 75BA                                        jne print_nmb
    69                                                      
    70                                      
    71                                          ; exit(0)
    72 00000076 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    73 00000078 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
