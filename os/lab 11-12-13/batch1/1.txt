#include <pthread.h>
#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>

int dn2=0, dn3=0;
pthread_t tid[10];

pthread_mutex_t mtx2 = PTHREAD_MUTEX_INITIALIZER;
pthread_mutex_t mtx3 = PTHREAD_MUTEX_INITIALIZER;

void* count(void* arg)
{
        while (dn2 < 5)
        {
                int n = rand()%101+50;
                if (n < 100 && n > 9)
                {
                        pthread_mutex_lock(&mtx2);
                        if (dn2 < 5)
                        {
                                printf("Thread %d generated %d - it has 2 digits\n", *(int*)arg, n);
                                dn2++;
                        }
                        pthread_mutex_unlock(&mtx2);
                }
                else
                {
                        pthread_mutex_lock(&mtx3);
                        printf("Thread %d generated %d - it has 3 digits\n", *(int*)arg, n);
                        dn3++;
                        //if (dn2 >=5) break;
                        pthread_mutex_unlock(&mtx3);
                }
        }
        return NULL;
}

int main(int argc, char* argv[])
{
        int i;
        for (i=0; i<10; i++)
                if (pthread_create(&tid[i], NULL, count, (void*)&i) > 0)
                {
                        perror("Failed to create thread");
                        exit(1);
                }
        for (i=0; i<10; i++) pthread_join(tid[i], NULL);
        pthread_mutex_destroy(&mtx3);
        pthread_mutex_destroy(&mtx2);

        printf("dn2 is %d and dn3 is %d\n", dn2, dn3);
        return 0;
}