1.Find all the usernames that logged in from "economica" on a Sunday. Use "last" to find the last logins, and then search for entries containing "economica" and "Sun". Extract the first column, and using "sort" and "uniq" display only distinct usernames.
cat last.fake | awk '$3 ~ /^\<economica/ && $4 ~ /\<Sun\>/ {print $1}' |sort | uniq

2.Find all the users that logged into the system after 11PM. Use "last" to get the data. Extract the username and the login time columns. Replace ";" with space int he result, then print only the usernames that appear on lines with the middle field 23 or greater. Use the "head" command to eliminate the last line which is not really part of the data. Use "sort" and "uniq" to show only distinct user names.
cat last.fake | awk '$7 ~ /\<23:[0-9][0-9]\>/ {print $1}' | sort | uniq

3.Display the full names of the users having a username that starts with "m" and with a user ID divisible by 7. Use /etc/passwd. Search for line starting with "m", the display the fifth column of the lines that have the third field divisible by 7
cat passwd.fake | awk -F: '$1 ~ /^m/ && $3 % 7 == 0 {print $5}'

4.Display all the distinct TTYs used by user root. Use command "ps -ef" to get the data. Search for lines starting with "root" and display their sisth field. Use "sort" and "uniq" to display the distinct value
cat ps.fake | awk '$1 ~ /\<root\>/ {print $6}' | sort | uniq

5.Find the full names of all the users whose username ends in 88. Use /etc/passed. Search for the required entries, then extract the fifth column only.
cat passwd.fake | awk -F: '$1 ~ /88\>/ {print $5}'

6.Find all users whose user ID has three digits and starts with 23. Use /etc/passwd. Search for the requried entries and then display the fifth column only. Rely on the structure of the file and possibly also on the length of the usernames
cat passwd.fake | awk -F: '$3 ~ /^\<23[0-9]\>$/ {print $5}'

7.Find all usersnames starting with "t" that logged on "pts/9". Use the command "last". Search by the first and second fields, then extract just the first. Use the commands "sort" and "uniq" to display only distinct usernames
cat last.fake | awk '$1 ~ /^t/ && $2 ~ /pts\/9/ {print $1}' | uniq | sort

8.Find all the distinct usernames starting with "r" that are currently running programs, and display them duplicating every vowel. Use the command "ps -ef". Search for lines starting with "r" then use "sort" and "uniq" to remove duplicates. Search/replace the resutl duplicating every vowel
cat ps.fake | awk '$1 ~ /^r/ {print $1}' | sort | uniq | sed -E 's,([aeiou]),\1\1,gi'

9.Display all the distinct lines left in /etc/passwd after deleting all letter and digits and spaces. Search replace the required characters. User "sort" and "uniq" to display to distinct lines.
cat passwd.fake | sed -E 's,([0-9a-zA-Z ]),,gi' | sort | uniq

10.Display all the distinct lines left in /etc/passwd after deleting all characters except "r". Search replace the required characters. User "sort" and "uniq" to display to distinct lines.
cat passwd.fake | sed -E 's,([^r]),,gi' | sort| uniq

11.
cat ps.fake | awk 'BEGIN {n=-1; s=0} {n++; s+=$2} END {print n}'